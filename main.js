(()=>{"use strict";function s(s){return s.startsWith(4)?"visa":s.match(/^5[1-5]/)||s.substring(0,4)>=2221&&s.substring(0,4)<=2720?"master":s.match(/^220[0-4]/)?"mir":s.match(/^3[47]/)?"amex":s.startsWith(6011)?"discover":s.startsWith(2131)||s.startsWith(1800)||s.startsWith(35)?"jcb":!!(s.match(/^30[0-5]/)||s.startsWith(36)||s.startsWith(38))&&"diners_club"}class t{constructor(){this.form=document.getElementById("form"),this.cards=Array.from(document.querySelectorAll(".cards-item")),this.formInput=document.getElementById("card-number"),this.tooltip=document.querySelector(".tooltip"),this.luhnSucces=document.querySelector(".luhn-succes"),this.luhnError=document.querySelector(".luhn-error"),this.noBankError=document.querySelector(".no-bank"),this.events()}events(){this.formInput.addEventListener("input",(s=>this.checkInput(s))),this.form.addEventListener("submit",(s=>this.formSubmit(s)))}checkCardNumber(s){return Number.isNaN(Number(s))?(this.showNumCheckError(),!1):s}checkInput(t){const r=t.target.value.replace(/ /g,"");this.clearMessages(),this.clearCardStyles(),""!==r&&(this.showBank(s(r)),this.checkCardNumber(r))}checkLuhnDom(s){s?this.luhnSucces.classList.add("display"):this.luhnError.classList.add("display")}clearCardStyles(){this.cards.forEach((s=>{s.classList.remove("cards-opacity")}))}clearMessages(){this.luhnSucces.classList.remove("display"),this.luhnError.classList.remove("display"),this.tooltip.classList.remove("display"),this.noBankError.classList.remove("display")}formSubmit(t){t.preventDefault(),this.clearMessages();const r=this.formInput.value.replace(/ /g,"");this.checkCardNumber(r)&&(this.checkLuhnDom(function(s){let t=0;const r=s,e=r.length%2!=0;for(let s=0;s<r.length;s+=1){let a=parseInt(r[s],10);t+=(e||0)===s%2&&(a*=2)>9?a-9:a}return t%10==0}(r)),this.showBank(s(r))||this.showNoBankError())}showBank(s){return this.cards.forEach((s=>{s.classList.add("cards-opacity")})),!!s&&(document.querySelector(`.${s}`).closest(".cards-opacity").classList.remove("cards-opacity"),!0)}showNoBankError(){this.noBankError.classList.add("display")}showNumCheckError(){this.tooltip.classList.add("display")}}const r=document.querySelector(".validate-form");new class{constructor(s){this.parentEl=s}static get markup(){return'\n        <ul class="cards">\n            <li class="cards-item"><span class="card visa" title="Visa">Visa</span></li>\n            <li class="cards-item"><span class="card master" title="Mastercard">Mastercard</span></li>\n            <li class="cards-item"><span class="card mir" title="МИР">МИР</span></li>\n            <li class="cards-item"><span class="card amex" title="American Express">American Express</span></li>\n            <li class="cards-item"><span class="card discover" title="Discover">Discover</span></li>\n            <li class="cards-item"><span class="card jcb" title="JCB">JCB</span></li>\n            <li class="cards-item"><span class="card diners_club" title="Diners Club">Diners Club</span></li>\n        </ul>\n        <form id="form" novalidate="novalidate">\n            <div class="form-group">\n                <input class="form-group__input" id="card-number" name="card-number" type="text" placeholder="Номер карты">\n                <div class="tooltip">Введите номер карты</div>\n                <button class="form-group__button" type="submit" id="submitform">Проверить</button>\n            </div>\n        </form>\n        <div class="result">\n            <div class="result-validate luhn-succes">Номер прошел проверку алгоритмом Луна!</div>\n            <div class="result-validate luhn-error">Номер не прошел проверку алгоритмом Луна</div>\n            <div class="result-validate no-bank">К сожалению, принадлежность карты не определена</div>\n        </div>            \n        '}bindToDOM(){this.parentEl.innerHTML=this.constructor.markup,this.form=new t}static get inputSelector(){return".form-group__input"}static get submitSelector(){return".form-group__button"}}(r).bindToDOM()})();